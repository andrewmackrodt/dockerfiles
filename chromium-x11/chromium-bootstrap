#!/bin/sh

# export XDG_RUNTIME_DIR
export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:-/run/user/$(id -u)}"

# export DBUS_SESSION_BUS_ADDRESS
if [ -z "${DBUS_SESSION_BUS_ADDRESS:-}" ]; then
    export DBUS_SESSION_BUS_ADDRESS="unix:path=$XDG_RUNTIME_DIR/bus"
fi

# generate locale
export LANG=${LANG:-en_US.UTF-8}
if ! locale -a 2>/dev/null | sed "s/.utf/.UTF-/" | grep -q "$LANG"; then
    sudo locale-gen "$(echo "$LANG" | sed -E "s/\..*//")" "$LANG"
fi

# make directories writeable
sudo chown $(id -u):$(id -g) /data /downloads "$XDG_RUNTIME_DIR"

# create the default alsa config to allow setting the soundcard
# via the ALSA_PCM environment variable, e.g.
#
# docker run -e ALSA_PCM="dmix:CARD=NVidia,DEV=8" ...
#
# this is only useful if environment variables for pulseaudio are
# not set, this is not recommended as it will access the
# soundcard directly and prevent the host and other containers
# from being able to access it while the container emits sound
configure_alsa() {
    if [ -f /etc/asound.conf ]; then
        return
    fi

    DEFAULT_SOUND_DEVICE=$(aplay -L | sed -n -E "s/^(dmix):CARD=([^,]+).*/\1:\2/p" | uniq | head -n1)

    if [ -z "$DEFAULT_SOUND_DEVICE" ]; then
        DEFAULT_SOUND_DEVICE=$(aplay -L | sed -n -E "s/^(hw):CARD=([^,]+).*/\1:\2/p" | uniq | head -n1)
    fi

    sudo tee /etc/asound.conf >/dev/null<<EOF
pcm.!default {
  type plug
  slave.pcm {
      @func getenv
      vars [ ALSA_PCM ]
      default "$DEFAULT_SOUND_DEVICE"
  }
}
EOF
}

# create a dummy machine-id based on the container id to reduce
# errors when running chromium, this is not a real machine id
# and will not work with pulseaudio on the host, machine-id
# should be mounted from the host instead so that the soundcard
# can be shared, e.g.
#
# docker run \
#   -v /etc/machine-id:/etc/machine-id:ro \
#   -v /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro \
#   ...
set_machine_id() {
    if [ ! -f /etc/machine-id ]; then
        awk -F':' '$2 == "pids" { print $3 }' /proc/1/cgroup \
            | awk -F'/' '{ print $3 }' \
            | sed -E "s/^(.{32}).*/\1/" > /etc/machine-id
    fi

    if [ ! -f /var/lib/dbus/machine-id ]; then
        mkdir -p /var/lib/dbus
        ln -s /etc/machine-id /var/lib/dbus/machine-id
    fi
}

# configure alsa fallback
configure_alsa
set_machine_id

# start chromium
exec "$(which chromium-browser)" "$@"
